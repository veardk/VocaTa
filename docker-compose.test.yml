# VocaTa测试环境 Docker Compose 配置
version: '3.8'

x-app-common: &app-common
  restart: unless-stopped
  networks:
    - vocata-network
  environment:
    - TZ=Asia/Shanghai

x-healthcheck-web: &healthcheck-web
  test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 30s

services:
  # 后端服务
  vocata-server:
    <<: *app-common
    image: ${SERVER_IMAGE:-ghcr.io/leivik/vocata-server:test-latest}
    container_name: vocata-server
    ports:
      - "${SERVER_PORT:-9009}:9009"
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE:-test}
      - SERVER_PORT=9009
      # 数据库配置
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT:-5432}
      - DB_NAME=${DB_NAME}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      # Redis配置
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DATABASE=${REDIS_DATABASE:-1}
      # 七牛云配置
      - QINIU_ACCESS_KEY=${QINIU_ACCESS_KEY}
      - QINIU_SECRET_KEY=${QINIU_SECRET_KEY}
      - QINIU_BUCKET=${QINIU_BUCKET}
      - QINIU_DOMAIN=${QINIU_DOMAIN}
      - QINIU_REGION=${QINIU_REGION}
      # 邮箱配置
      - EMAIL_USER_NAME=${EMAIL_USER_NAME}
      - EMAIL_USER_PASSWORD=${EMAIL_USER_PASSWORD}
      # 邮件服务配置
      - MAIL_HOST=${MAIL_HOST:smtp.163.com}
      - MAIL_PORT=${MAIL_PORT:465}
      - MAIL_USERNAME=${EMAIL_USER_NAME}
      - MAIL_PASSWORD=${EMAIL_USER_PASSWORD}
      # AI服务配置
      - AI_LLM_PROVIDER=${AI_LLM_PROVIDER:-qiniu}
      - QINIU_AI_API_KEY=${QINIU_AI_API_KEY}
      - QINIU_AI_BASE_URL=${QINIU_AI_BASE_URL:-https://openai.qiniu.com/v1}
      - QINIU_AI_MODEL=${QINIU_AI_MODEL:-x-ai/grok-4-fast}
      - QINIU_AI_TIMEOUT=${QINIU_AI_TIMEOUT:-60}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}

    volumes:
      - server-logs:/var/log/vocata
      - server-uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9009/api/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    depends_on: []
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  # 前端客户端
  vocata-web:
    <<: *app-common
    image: ${WEB_IMAGE:-ghcr.io/leivik/vocata-web:test-latest}
    container_name: vocata-web
    ports:
      - "${WEB_PORT:-3000}:8080"
    volumes:
      - web-logs:/var/log/nginx
    healthcheck: *healthcheck-web
    depends_on:
      vocata-server:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 64M
          cpus: '0.1'

  # 管理后台
  vocata-admin:
    <<: *app-common
    image: ${ADMIN_IMAGE:-ghcr.io/leivik/vocata-admin:test-latest}
    container_name: vocata-admin
    ports:
      - "${ADMIN_PORT:-3001}:8080"
    volumes:
      - admin-logs:/var/log/nginx
    healthcheck: *healthcheck-web
    depends_on:
      vocata-server:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 64M
          cpus: '0.1'

# 数据卷
volumes:
  server-logs:
    driver: local
  server-uploads:
    driver: local
  web-logs:
    driver: local
  admin-logs:
    driver: local

# 网络配置
networks:
  vocata-network:
    driver: bridge
    name: ${COMPOSE_PROJECT_NAME:-vocata-test}-network