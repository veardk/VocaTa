server:
  port: 9009

spring:
  profiles:
    active: local
  application:
    name: vocata-server

  # 静态资源配置
  web:
    resources:
      static-locations: classpath:/static/
      cache:
        cachecontrol:
          max-age: 3600

  # Jackson时间格式配置
  jackson:
    time-zone: GMT+8
    serialization:
      write-dates-as-timestamps: false

  # 数据源配置
  datasource:
    url: jdbc:postgresql://${DB_HOST:}:${DB_PORT:}/${DB_NAME:}?stringtype=unspecified
    username: ${DB_USERNAME:}
    password: ${DB_PASSWORD:}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  # 本地Redis配置
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      database: 0
      timeout: 10000ms
      lettuce:
        pool:
          max-active: 8
          max-wait: -1ms
          max-idle: 8
          min-idle: 0

  # 定时任务配置
  task:
    scheduling:
      pool:
        size: 10

  # 邮件配置
  mail:
    host: smtp.163.com
    port: 465
    username: ${MAIL_USERNAME:}
    password: ${MAIL_PASSWORD:}
    protocol: smtp
    default-encoding: UTF-8
    test-connection: false
    properties:
      mail:
        smtp:
          auth: true
          ssl:
            enable: true
          socketFactory:
            class: javax.net.ssl.SSLSocketFactory
            port: 465

# MyBatis Plus配置
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      id-type: ASSIGN_ID
      logic-delete-field: isDelete
      logic-delete-value: 1
      logic-not-delete-value: 0
      insert-strategy: NOT_NULL
      update-strategy: NOT_NULL
    banner: false
  mapper-locations: classpath*:/mapper/**/*.xml

# Sa-Token配置
sa-token:
  # token名称
  token-name: Authorization
  # token有效期，单位s (30天)
  timeout: 2592000
  # token临时有效期，单位s
  active-timeout: -1
  # 是否允许同一账号并发登录
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个token
  is-share: true
  # token风格
  token-style: uuid
  # 是否输出操作日志
  is-log: false
  # 是否从header中读取token
  is-read-header: true
  # 是否从cookie中读取token
  is-read-cookie: false
  # 是否从body中读取token
  is-read-body: false
  # token前缀（支持Bearer前缀）
  token-prefix: Bearer
  # 配置Redis作为Sa-Token的持久层
  alone-redis:
    database: 0

# AI服务配置
ai:
  llm:
    provider: ${AI_LLM_PROVIDER:qiniu}  # 默认使用七牛云AI
  stt:
    provider: ${AI_STT_PROVIDER:qiniu}
  tts:
    provider: ${AI_TTS_PROVIDER:xunfei}

# 七牛云AI配置
qiniu:
  ai:
    api-key: ${QINIU_AI_API_KEY:your-qiniu-ai-api-key}
    base-url: ${QINIU_AI_BASE_URL:https://openai.qiniu.com/v1}
    default-model: ${QINIU_AI_MODEL:x-ai/grok-4-fast}
    timeout: ${QINIU_AI_TIMEOUT:60}
  # 七牛云存储配置
  access-key: ${QINIU_ACCESS_KEY:your-qiniu-access-key}
  secret-key: ${QINIU_SECRET_KEY:your-qiniu-secret-key}
  # 七牛云STT配置
  stt:
    endpoint: ${QINIU_STT_ENDPOINT:https://openai.qiniu.com/v1}
    model: ${QINIU_STT_MODEL:asr}

# Gemini配置
gemini:
  api:
    key: ${GEMINI_API_KEY:your-gemini-api-key}
    base-url: ${GEMINI_BASE_URL:https://generativelanguage.googleapis.com}
    default-model: ${GEMINI_MODEL:gemini-2.5-flash-lite}
    timeout: ${GEMINI_TIMEOUT:60}

# OpenAI配置
openai:
  api:
    key: ${OPENAI_API_KEY:your-openai-api-key}
    base-url: ${OPENAI_BASE_URL:https://api.openai.com}
    default-model: ${OPENAI_MODEL:gpt-3.5-turbo}
    timeout: ${OPENAI_TIMEOUT:60}

# 本地开发日志配置
logging:
  level:
    com.vocata: debug
    com.baomidou.mybatisplus: debug
    org.springframework.web: debug
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"
  file:
    name: logs/vocata-local.log