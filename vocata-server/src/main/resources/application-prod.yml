# 生产环境配置
server:
  port: ${SERVER_PORT:9009}

spring:
  # 数据源配置
  datasource:
    url: jdbc:postgresql://${DB_HOST_PROD}:${DB_PORT_PROD}/${DB_NAME_PROD}?stringtype=unspecified
    username: ${DB_USERNAME_PROD}
    password: ${DB_PASSWORD_PROD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 10
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  # Redis配置
  data:
    redis:
      host: ${REDIS_HOST_PROD}
      port: ${REDIS_PORT_PROD:6379}
      password: ${REDIS_PASSWORD_PROD}
      database: ${REDIS_DATABASE_PROD:0}
      timeout: 10000ms
      lettuce:
        pool:
          max-active: 16
          max-wait: -1ms
          max-idle: 8
          min-idle: 2

  # 邮件配置 - 生产环境
  mail:
    host: smtp.163.com
    port: 465
    username: ${EMAIL_USER_NAME}
    password: ${EMAIL_USER_PASSWORD}
    protocol: smtp
    test-connection: false
    default-encoding: UTF-8
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          ssl:
            enable: true
          socketFactory:
            port: 465
            class: javax.net.ssl.SSLSocketFactory
            fallback: false
          connectiontimeout: 30000
          timeout: 30000
          writetimeout: 30000

# MyBatis Plus配置 (生产环境关闭SQL日志)
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.nologging.NoLoggingImpl
  global-config:
    db-config:
      id-type: ASSIGN_ID
      logic-delete-field: isDelete
      logic-delete-value: 1
      logic-not-delete-value: 0
      insert-strategy: NOT_NULL
      update-strategy: NOT_NULL
    banner: false
  mapper-locations: classpath*:/mapper/**/*.xml

# Sa-Token配置 (生产环境安全配置)
sa-token:
  # token名称
  token-name: Authorization
  # token有效期 (生产环境7天)
  timeout: 604800
  # token临时有效期，单位s
  active-timeout: -1
  # 更严格的安全配置 - 禁止并发登录
  is-concurrent: false
  # 在多人登录同一账号时，是否共用一个token
  is-share: false
  # token风格
  token-style: uuid
  # 是否输出操作日志 (生产环境关闭)
  is-log: false
  # 是否从header中读取token
  is-read-header: true
  # 是否从cookie中读取token
  is-read-cookie: false
  # 是否从body中读取token
  is-read-body: false
  # token前缀（支持Bearer前缀）
  token-prefix: Bearer
  # 配置Redis作为Sa-Token的持久层
  alone-redis:
    database: 1

# AI服务配置 - 生产环境
ai:
  llm:
    provider: ${AI_LLM_PROVIDER:qiniu}  # 生产环境默认使用七牛云AI
  stt:
    provider: ${AI_STT_PROVIDER:xunfei}
  tts:
    provider: ${AI_TTS_PROVIDER:volcan}

# 七牛云配置 - 生产环境
qiniu:
  access-key: ${QINIU_ACCESS_KEY_PROD}
  secret-key: ${QINIU_SECRET_KEY_PROD}
  bucket: ${QINIU_BUCKET_PROD:vocata-files-prod}
  domain: ${QINIU_DOMAIN_PROD:https://files.vocata.com}
  region: ${QINIU_REGION_PROD:huadong}
  # AI服务配置
  ai:
    api-key: ${QINIU_AI_API_KEY}
    base-url: ${QINIU_AI_BASE_URL:https://openai.qiniu.com/v1}
    default-model: ${QINIU_AI_MODEL:x-ai/grok-4-fast}
    timeout: ${QINIU_AI_TIMEOUT:60}

# Gemini配置 - 生产环境
gemini:
  api:
    key: ${GEMINI_API_KEY}
    base-url: ${GEMINI_BASE_URL:https://generativelanguage.googleapis.com}
    default-model: ${GEMINI_MODEL:gemini-2.5-flash-lite}
    timeout: ${GEMINI_TIMEOUT:60}

# OpenAI配置 - 生产环境
openai:
  api:
    key: ${OPENAI_API_KEY}
    base-url: ${OPENAI_BASE_URL:https://api.openai.com}
    default-model: ${OPENAI_MODEL:gpt-3.5-turbo}
    timeout: ${OPENAI_TIMEOUT:60}

# 日志配置
logging:
  level:
    com.vocata: info
    root: warn
    org.springframework.web: warn
    org.springframework.security: warn
    com.baomidou.mybatisplus: warn
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"
  file:
    name: /var/log/vocata/vocata-server.log
    max-size: 100MB
    max-history: 30